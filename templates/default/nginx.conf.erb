
# run as the user www-data
user www-data;

# have 4 worker processes
worker_processes 4;

pid /var/run/nginx.pid;

events {
  worker_connections 1024;
  multi_accept on;
  use epoll;
}

http {

  ##
  # Basic Settings
  ##

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;
  server_names_hash_bucket_size  64;
  server_tokens off;

  # server_names_hash_bucket_size 64;
  # server_name_in_redirect off;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

	proxy_buffer_size 128k;
	proxy_buffers 4 256k;
	proxy_busy_buffers_size 256k;

  ##
  # Logging Settings
  ##

  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;

  ##
  # Gzip Settings
  ##

  gzip on;
  gzip_disable "msie6";
  # compress proxied requests too.
  # it doesn't actually matter if the request is proxied, we still want it compressed.
  gzip_proxied any;
   
  # a pretty comprehensive list of content mime types that we want to compress
  # there's a lot of repetition here because different applications might use different
  # (and possibly non-standard) types. we don't really care, we still want them included
  # don't include text/html -- it is always included anyway
  gzip_types 
    text/css
    text/plain
    text/javascript
    application/javascript
    application/json
    application/x-javascript
    application/xml
    application/xml+rss
    application/xhtml+xml
    application/x-font-ttf
    application/x-font-opentype
    application/vnd.ms-fontobject
    image/svg+xml
    image/x-icon
    application/rss+xml
    application/atom_xml;
   
  # increase the compression level, at the expense of additional CPU
  # cpu cycles are cheap virtually everywhere now, bandwidth not nearly as much
  gzip_comp_level 9;
   
  # the default is to gzip only HTTP 1.1 requests
  # we want to gzip http 1.0 requests, too, so lower the level required
  gzip_http_version 1.0;
   
  # set the Vary: Accept-Encoding header to force proxies to store compressed and uncompressed versions
  # per the nginx docs, a bug in IE 4 - 6 will cause them to not cache anything with this on
  # most people aren't going to care about ie 6 anymore, but keep that in mind
  gzip_vary on;
   
  # increase the size of the buffers which hold responses to make sure larger content can be compressed too
  # this means there are 16 buffers and they can each hold 8k
  # if you serve a lot of ridiculously large text (like combined CSS) you might consider upping this slightly
  gzip_buffers 16 8k;
   
  # up the minimum length a little to account for gzip overhead
  # this means anything smaller than 1024 bytes won't be compressed.
  # the default is 20 bytes, which is sooo tiny it's a waste to compress
  gzip_min_length 1024;  

  include /etc/nginx/conf.d/*.conf;
  include /etc/nginx/sites-enabled/*;
}
